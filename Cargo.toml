[package]
name = "amari-mcp"
version = "0.1.0"
edition = "2021"
authors = ["Amari Contributors"]
license = "MIT OR Apache-2.0"
description = "Model Context Protocol server for Amari mathematical computing library"
repository = "https://github.com/justinelliottcobb/amari-mcp"
homepage = "https://github.com/justinelliottcobb/amari-mcp"
keywords = ["mcp", "mathematics", "geometric-algebra", "tropical-algebra", "gpu"]
categories = ["mathematics", "science", "algorithms", "web-programming"]

[dependencies]
# Core Amari library
amari = { version = "0.9.5", features = ["gpu"] }

# MCP framework - High-quality Rust SDK
pmcp = "1.1"

# Async runtime
tokio = { version = "1.0", features = ["full"] }
tokio-util = "0.7"
async-trait = "0.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
schemars = { version = "1.0", features = ["derive"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Time and ID utilities (always available)
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4"] }
sha2 = "0.10"

# Optional database support
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json"], optional = true, default-features = false }

# CLI
clap = { version = "4.0", features = ["derive"] }

[features]
default = []
database = ["dep:sqlx"]
gpu = ["amari/gpu"]

[lib]
name = "amari_mcp"
path = "src/lib.rs"

[[bin]]
name = "amari-mcp"
path = "src/main.rs"

[dev-dependencies]
approx = "0.5"
tokio-test = "0.4"
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "uuid", "chrono", "json"], default-features = false }
tempfile = "3.0"
serial_test = "3.0"

[workspace]
# Empty workspace table to prevent this from being part of parent workspace